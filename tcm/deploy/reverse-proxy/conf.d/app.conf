map $ssl_client_s_dn $client_role {
  default "blocked";
  ~OU=Shared   "universal";
  ~CN=TCM\ Universal\ Client "universal";
}

client_max_body_size 2m;

limit_req_zone $binary_remote_addr zone=req:10m rate=10r/s;
limit_conn_zone $binary_remote_addr zone=conn:10m;

# WebSocket
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# HTTPS + mTLS
server {
  listen 8443 ssl default_server;
  listen [::]:8443 ssl default_server;
  http2 on;
  server_name _;

  # cert serwera
  ssl_certificate         /etc/nginx/certs/server.crt.pem;
  ssl_certificate_key     /etc/nginx/certs/server.key.pem;
  ssl_trusted_certificate /etc/nginx/certs/ca-chain.crt;

  # weryfikacja klienta
  ssl_client_certificate  /etc/nginx/certs/ca-clients.crt; # intermediate+root
  ssl_verify_client on;
  ssl_verify_depth 3;

  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
  add_header X-Frame-Options "DENY" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer" always;
  add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'sha256-JmgnGcUc/aPsnkqONzXqZX7hcwxaFweG6+mFkIA5zmo='; style-src 'self'; img-src 'self' data:; connect-src 'self' wss:; worker-src 'self'; manifest-src 'self'; base-uri 'none'; frame-ancestors 'none'" always;

  # proxy
  proxy_http_version 1.1;
  proxy_set_header Host              $http_host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto https;
  proxy_set_header Upgrade           $http_upgrade;
  proxy_set_header Connection        $connection_upgrade;
  proxy_read_timeout 60s;
  proxy_connect_timeout 5s;
  proxy_send_timeout 60s;

  location / {
    if ($client_role = "blocked") {
        return 403;
    }
    proxy_pass http://app;
  }

  location = /health {
    access_log off;
    return 200 "ok";
  }

  limit_req zone=req burst=20 nodelay;
  limit_conn conn 50;
}
